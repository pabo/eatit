<?php
#$maxResults = 10;
$maxResults = 5;

$query = $_GET["query"];
$query = preg_replace('/[^a-z\d\s]+/i', '', $query);

# don't serve empty search requests
if (!$query) {
	print json_encode("");
	return;
}

#simulate some network traffic for testing
#sleep a random amount of time between 0 and 5 second
#sleep(5* mt_rand(0, mt_getrandmax()) / mt_getrandmax());

$row = 1;
$restaurantsFromCSV = [];
if (($handle = fopen("../db.csv", "r")) !== FALSE) {
	while (($data = fgetcsv($handle, 0, ",")) !== FALSE) {
		$normalizedName = preg_replace('/[^a-z\d\s]+/i', '', $data[0]);
		$normalizedCuisine = preg_replace('/[^a-z\d\s]+/i', '', $data[1]);
		if (preg_match("/^$query/i", $normalizedName) || preg_match("/^$query/i", $normalizedCuisine)) {
			array_push($restaurantsFromCSV, [ "name" => $data[0], $cuisine => $data[1] ]);
		}

		$row++;
	}
	fclose($handle);
}
else {
	echo "error opening file\n";
}




$restaurants = [
	[
	"name" => "Spicy City",
	"cuisine" => "Chinese"
	],
	[
	"name" => "Spicy Town",
	"cuisine" => "Chinese"
	],
	[
	"name" => "Spicy Country",
	"cuisine" => "Chinese"
	],
	[
	"name" => "Spicy District",
	"cuisine" => "Chinese-American"
	],
	[
	"name" => "Tajima",
	"cuisine" => "Ramen"
	],
	[
	"name" => "B H Chung",
	"cuisine" => "Korean"
	],
	[
	"name" => "Nozomi",
	"cuisine" => "Sushi"
	],
	[
	"name" => "Jersey Mike's",
	"cuisine" => "Sandwiches"
	],
	[
	"name" => "Super Sergio's",
	"cuisine" => "Tacos"
	],
	[
	"name" => "O'Briens",
	"cuisine" => "Bar Food"
	],
	[
	"name" => "Raki Raki",
	"cuisine" => "Ramen"
	],
	[
	"name" => "Dumpling Inn",
	"cuisine" => "Chinese"
	],
	[
	"name" => "Tapioka Express",
	"cuisine" => "Coffee Shop"
	],
	[
	"name" => "Pangaea",
	"cuisine" => "Coffee Shop"
	],
	[
	"name" => "Korea House",
	"cuisine" => "Korean"
	],
];

#TODO word split search
#TODO order search by some sane criteria
#TODO make match insensitive to punctuation
function search($entry) {
	global $query;
	$normalizedName = preg_replace('/[^a-z\d\s]+/i', '', $entry["name"]);
	$normalizedCuisine = preg_replace('/[^a-z\d\s]+/i', '', $entry["cuisine"]);

	return (preg_match("/^$query/i", $normalizedName) || preg_match("/^$query/i", $normalizedCuisine));
}

#TODO results is unsorted
$results = array_filter($restaurants, 'search');

#$slicedResults = array_slice($results, 0, $maxResults);
$slicedResults = array_slice($restaurantsFromCSV, 0, $maxResults);
print json_encode($slicedResults);
?>
